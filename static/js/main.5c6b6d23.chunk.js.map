{"version":3,"sources":["components/Header.js","components/Figure.js","components/WrongLetters.js","components/Word.js","helpers/helpers.js","components/Popup.js","App.js","components/Notification.js","index.js"],"names":["Header","Figure","errors","wrongLetters","length","height","width","className","x1","y1","x2","y2","cx","cy","r","WrongLetters","map","letter","i","reduce","prev","curr","Word","selectedWord","correctLetters","split","includes","showNotification","setter","setTimeout","checkWin","correct","wrong","word","status","forEach","newentry","Popup","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","useEffect","style","display","onClick","Notification","words","window","confirm","prompt","alert","push","console","log","Math","floor","random","App","useState","setCorrectLetters","setWrongLetters","setShowNotification","handleKeydown","event","key","keyCode","toLowerCase","show","currentLetters","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c6b6d23.chunk.js","sourcesContent":["import React from 'react'\n\n// rafce\nconst Header = () => {\n  return (\n    <>\n      <h1>Hangman</h1>\n      <p>Enter a letter to find the hidden word</p>\n    </>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nconst Figure = ({ wrongLetters }) => {\n  const errors = wrongLetters.length\n\n  return (\n    <svg height=\"250\" width=\"200\" className=\"figure-container\">\n      {/* <!-- Rod --> */}\n      <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\n      <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\n      <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\n      <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\n\n      {/* <!-- Head --> */}\n      {errors > 0 &&\n        <circle cx=\"140\" cy=\"70\" r=\"20\" />\n      }\n      {/* <!-- Body --> */}\n      {errors > 1 &&\n        <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />\n      }\n      {/* <!-- Arms --> */}\n      {errors > 2 &&\n        <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" />\n      }\n      {errors > 3 &&\n        <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" />\n      }\n      {/* <!-- Legs --> */}\n      {errors > 4 &&\n        <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" />\n      }\n      {errors > 5 &&\n        <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />\n      }\n    </svg>\n  )\n}\n\nexport default Figure\n","import React from 'react'\n\nconst WrongLetters = ({ wrongLetters }) => {\n\n  return (\n    <div className=\"wrong-letters-container\">\n      <div>\n        {wrongLetters.length > 0 && \n          <p>Wrong</p>\n        }\n        {wrongLetters\n          .map((letter, i) => <span key={i}>{letter}</span>)\n          .reduce((prev, curr) => prev === null ? [curr] : [prev, ', ', curr], null)}\n      </div>\n    </div>\n  )\n}\n\nexport default WrongLetters\n","import React from 'react';\n\nconst Word = ({ selectedWord, correctLetters }) => {\n\n  return (\n    <div className=\"word\">\n      {selectedWord.split('').map((letter, i) => {\n        return (\n          <span className=\"letter\" key={i}>\n            {correctLetters.includes(letter) ? letter : ''}\n          </span>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Word\n","export function showNotification(setter) {\n  setter(true);\n  setTimeout(() => {\n    setter(false);\n  }, 2000);\n}\n\nexport function checkWin(correct, wrong, word) {\n  let status = 'win';\n\n  // Check for win\n  word.split('').forEach(letter => {\n    if(!correct.includes(letter)){\n      status = '';\n    }\n  });\n  \n  // Check for lose\n  if(wrong.length === 6) status = 'lose';\n\n  return status\n}","import React, { useEffect } from 'react';\nimport { checkWin } from '../helpers/helpers';\n\nconst Popup = ({correctLetters, wrongLetters, selectedWord, setPlayable, playAgain}) => {\n  let finalMessage = '';\n  let finalMessageRevealWord = '';\n  let playable = true;\n\n  if( checkWin(correctLetters, wrongLetters, selectedWord) === 'win' ) {\n    finalMessage = 'Congratulations! You won! ðŸ˜ƒ';\n    playable = false;\n  } else if( checkWin(correctLetters, wrongLetters, selectedWord) === 'lose' ) {\n    finalMessage = 'Unfortunately you lost. ðŸ˜•';\n    finalMessageRevealWord = `...the word was: ${selectedWord}`;\n    playable = false;\n  }\n\n  useEffect(() => {\n    setPlayable(playable);\n  });\n\n  return (\n    <div className=\"popup-container\" style={finalMessage !== '' ? {display:'flex'} : {}}>\n      <div className=\"popup\">\n        <h2>{finalMessage}</h2>\n        <h3>{finalMessageRevealWord}</h3>\n        <button onClick={playAgain}>Play Again</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Popup\n","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Figure from './components/Figure';\nimport WrongLetters from './components/WrongLetters';\nimport Word from './components/Word';\nimport Popup from './components/Popup';\nimport Notification from './components/Notification';\nimport { showNotification as show, checkWin } from './helpers/helpers';\n\nimport './App.css';\n\nconst words = ['application', 'programming', 'interface', 'wizard'];\n// newword();\nlet newentry;\nvar addword = window.confirm(\"Would You like to add Your own words ?\");\nif (addword){\n  newentry = prompt(\"Enter Your own words\",\"\");\n      alert (`${newentry} has been added to the random list`);\n      words.push(newentry);\n      console.log(words);\n} else {\n  alert(\"You will be playing with pre-configuted words\")\n}\n\n\n// function newword (){\n// let newentry;\n  \n//     alert('entered');\n//     // let word = \"true\";\n//     for (let i=0; i<2 ; i++){\n//       alert('entered for')\n//       console.log(i)\n//       if (newword.value.trim()===\"\"){\n//         // word = \"false\";\n//         alert(\"All the Entered words added to list\");\n//         alert(\"Let the game begin\");\n//       }else{      \n      \n//     }\n//   }else {\n//   alert(\"You be playing with pre-configuted words\")\n//   return\n//  }\n// }\n  \n\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\nfunction App() {\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n\n  useEffect(() => {\n    const handleKeydown = event => {\n      const { key, keyCode } = event;\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        }\n      }\n    }\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n\n  function playAgain() {\n    setPlayable(true);\n\n    // Empty Arrays\n    setCorrectLetters([]);\n    setWrongLetters([]);\n\n    const random = Math.floor(Math.random() * words.length);\n    selectedWord = words[random];\n  }\n\n  return (\n    <>\n      <Header />\n      <div className=\"game-container\">\n        <Figure wrongLetters={wrongLetters} />\n        <WrongLetters wrongLetters={wrongLetters} />\n        <Word selectedWord={selectedWord} correctLetters={correctLetters} />\n      </div>\n      <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain} />\n      <Notification showNotification={showNotification} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react'\n\nconst Notification = ({ showNotification }) => {\n  return (\n    <div className={`notification-container ${showNotification ? 'show' : ''}`}>\n      <p>You have already entered this letter</p>\n    </div>\n  )\n}\n\nexport default Notification\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}